{"version":3,"file":"static/js/631.d4bdacdd.chunk.js","mappings":"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","sources":["components/ContactsList/ContactsListstyled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/Section/SectionStyled.js","components/Section/Section.jsx","components/Form/Form.jsx","components/pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  font-size: 16px;\n`;\n\nexport const ContactStyled = styled.li`\n  display: flex;\n  gap: 8px 12px;\n  justify-content: space-between;\n`;\n\nexport const Buttons = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  cursor: pointer;\n  width: 80px;\n  height: 20px;\n  background-image: linear-gradient(to top, #d8d9db 0%, #fff 80%, #fdfdfd 100%);\n  border-radius: 30px;\n  border: 1px solid #8f9092;\n  transition: all 0.2s ease;\n  font-family: 'Source Sans Pro', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  color: #606060;\n  text-shadow: 0 1px #fff;\n\n  button:hover {\n    box-shadow: 0 4px 3px 1px #fcfcfc, 0 6px 8px #d6d7d9, 0 -4px 4px #cecfd1,\n      0 -6px 4px #fefefe, inset 0 0 3px 3px #cecfd1;\n  }\n\n  button:active {\n    box-shadow: 0 4px 3px 1px #fcfcfc, 0 6px 8px #d6d7d9, 0 -4px 4px #cecfd1,\n      0 -6px 4px #fefefe, inset 0 0 5px 3px #999, inset 0 0 30px #aaa;\n  }\n\n  button:focus {\n    box-shadow: 0 4px 3px 1px #fcfcfc, 0 6px 8px #d6d7d9, 0 -4px 4px #cecfd1,\n      0 -6px 4px #fefefe, inset 0 0 5px 3px #999, inset 0 0 30px #aaa;\n  }\n`;\n","import {\n  ContactListStyled,\n  Buttons,\n  ContactStyled,\n} from './ContactsListstyled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsAPI';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { AiFillDelete } from 'react-icons/ai';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const filteredContacts = () =>\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  const handleDeleteContact = idContact => {\n    dispatch(deleteContact(idContact));\n  };\n\n  const getfilteredContacts = filteredContacts();\n\n  return (\n    <ContactListStyled>\n      {getfilteredContacts.map(({ id, name, number }) => (\n        <ContactStyled key={id}>\n          {name}: {number}\n          <Buttons type=\"button\" onClick={() => handleDeleteContact(id)}>\n            Delete\n            <AiFillDelete size=\"14\" />\n          </Buttons>\n        </ContactStyled>\n      ))}\n    </ContactListStyled>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleInputChange = evt => {\n    dispatch(addFilter(evt.target.value));\n  };\n  return (\n    <div className=\"container-form\">\n      <div className=\"heading\">Find contact by name</div>\n      <input\n        className=\"input-filter\"\n        name=\"filter\"\n        placeholder=\"search\"\n        onChange={handleInputChange}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  margin-top: 20px;\n  border-radius: 4px;\n`;\n","import { SectionStyled } from './SectionStyled';\n\nexport const Section = ({ children }) => {\n  return <SectionStyled>{children}</SectionStyled>;\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/contactsAPI';\nimport { selectContacts } from 'redux/selectors';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const isExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContacts({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleInputChange = evt => {\n    const { name, value } = evt.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  return (\n    <div className=\"container-form\">\n      <div className=\"heading\">Phonebook</div>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleInputChange}\n          required\n        />\n        <input\n          className=\"input\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleInputChange}\n          required\n        />\n\n        <button className=\"login-button\" type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Section } from 'components/Section/Section';\nimport { Form } from 'components/Form/Form';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Section>\n        <Form />\n      </Section>\n      <Section>\n        <Filter />\n        <ContactsList />\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactListStyled","styled","_templateObject","_taggedTemplateLiteral","ContactStyled","_templateObject2","Buttons","_templateObject3","ContactsList","contacts","useSelector","selectContacts","filter","selectFilter","dispatch","useDispatch","getfilteredContacts","_ref","name","toLowerCase","includes","trim","_jsx","children","map","_ref2","id","number","_jsxs","type","onClick","idContact","deleteContact","AiFillDelete","size","Filter","className","placeholder","onChange","evt","addFilter","target","value","SectionStyled","Section","Form","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleInputChange","_evt$currentTarget","currentTarget","onSubmit","preventDefault","find","contact","alert","concat","addContacts","pattern","title","required","_Fragment"],"sourceRoot":""}